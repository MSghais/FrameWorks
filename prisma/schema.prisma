// prisma/schema.prisma

datasource db {
  provider = "mongodb"
  url      = env("DB_MONGO_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId // Use String as the ID type
  name     String?
  fid String @unique
  address    String? 
  posts    Post[]
  quests    Quest[]
}

model Post {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId // Use String as the ID type
  title     String?
  fidId String?
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String @db.ObjectId
}

enum QuestRequirements {
    FOLLOW
    FOLLOWER
    CAST
    LIKE
    REPLY
    RECAST
    CHANNEL_JOINED
}

model Quest {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId // Use String as the ID type
  title     String?
  fid String?
  src String?
  castId String?
  channelName String?
  amountUpvote Int?
  requirements QuestRequirements?
  type TypeAds?
  content   String
  owner    User?     @relation(fields: [ownerId], references: [id])
  ownerId  String? @db.ObjectId
  userQuestFinish UserQuestFinishType[]
}
type UserQuestFinishType {
  fid String
  name String?
  createdAt Int?
}

model UserQuestFinish {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId // Use String as the ID type
  fid String 
  questId String 
  questIndex String?
  doneAt Int?
}

type TransactionAds {
  id Int?
  hash String?
  amount Int 
  questId String?
  castId String?
  fid String?
}

enum TypeAds {
  QUEST 
  CAST 
  USER
  CHANNEL
  NFT
}

model Ads {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId // Use String as the ID type
  questId String?
  castId String?
  fid String?
  channelId String?
  channelName String?
  ownerFid String?
  questIndex String?
  createdAt Int?
  type TypeAds
  amount Int?
  totalAmount Int?
  lastPayment Int?
  image String?
  payments TransactionAds[]
}




